language: cpp

sudo: false

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - ccache
      - libhwloc-dev
      - libopenmpi-dev
      - openmpi-bin
      - g++-6

before_script:
  - sudo ln -s /usr/bin/ccache /usr/lib/ccache/clang++
  - ccache -z
  - KOKKOS_OPTS=( --with-hwloc=/usr --gcc-toolchain=/usr )
  - for i in ${BACKENDS}; do KOKKOS_OPTS+=( --with-${i,,[A-Z]} ); done
    # LD_LIBRARY_PATH workaround for libomp: https://github.com/travis-ci/travis-ci/issues/8613
  - if [[ ${CC} = clang ]]; then export LD_LIBRARY_PATH=/usr/local/clang/lib:$LD_LIBRARY_PATH; fi
  - if [[ ${CC} = gcc ]]; then export CXX=g++-6; export CC=gcc-6; export FC=gfortran-6; fi
  - git clone --depth=1 https://github.com/kokkos/kokkos.git &&
    pushd kokkos &&
    mkdir build &&
    pushd build &&
    ../generate_makefile.bash --prefix=$HOME/kokkos ${KOKKOS_OPTS[@]} &&
    make -j2 &&
    make install &&
    popd &&
    popd
  - pwd
  - git clone --depth=1 https://github.com/ECP-copa/Cabana.git
  - mkdir build && pushd build &&
    cmake -DCabana_ENABLE_Serial=OFF -DCabana_ENABLE_MPI=OFF
          -DCabana_ENABLE_TESTING=OFF -DCabana_ENABLE_EXAMPLES=OFF
          -DCabana_ENABLE_PERFORMANCE_TESTING=OFF &&
    make -k -j2 VERBOSE=1 && make install DESTDIR=${HOME}/Cabana && popd

before_install:
 - mkdir -p "$HOME/bin"
 - if [[ ${CMAKE_VERSION} ]]; then wget --no-check-certificate -qO- http://www.cmake.org/files/v${CMAKE_VERSION:0:3}/cmake-${CMAKE_VERSION}.tar.gz | tar -xz && ln -s $PWD/cmake-${CMAKE_VERSION}/bin/cmake "$HOME/bin/cmake"; fi
 - if [[ ${COVERAGE}  ]]; then pip install --user codecov; fi

env: #maybe add mpich later
  global:
    - CCACHE_CPP2=yes
  matrix:
    - COVERAGE=ON
    - COVERAGE=OFF

script:
  - cd $HOME && mkdir build && cd build && pwd &&
    PATH="$HOME/bin:/usr/lib/ccache:$PATH" cmake -DENABLE_TESTS=ON ${COVERAGE:+-DENABLE_COVERAGE_BUILD=ON} -DKOKKOS_DIR=${HOME}/kokkos -DCABANA_DIR=${HOME}/Cabana .. &&
    make -j4 VERBOSE=1 && make test CTEST_OUTPUT_ON_FAILURE=1 && make install DESTDIR=$PWD

after_success:
  - if [[ ${COVERAGE} ]]; then cd .. && codecov --gcov-exec gcov-${GVER}; fi

cache:
  directories:
    - $HOME/.ccache

compiler:
  - gcc
